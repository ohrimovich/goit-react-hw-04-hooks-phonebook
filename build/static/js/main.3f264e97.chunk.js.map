{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.js","components/ContactLIst/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactLIst/ContactList.module.scss","components/Filter/Filter.module.scss"],"names":["module","exports","ContactForm","state","name","number","handlerChange","e","currentTarget","value","setState","reset","handlerSubmit","preventDefault","props","onSubmit","this","className","s","form","label","input","type","pattern","title","required","onChange","autoComplete","button","Component","ContactList","contacts","deleteContact","list","map","contact","item","onClick","id","Filter","filteredValue","App","filter","formSubmitHandler","find","alert","nanoid","changeFilter","getFilteredContactList","toLocaleLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f264e97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3wQJH\",\"button\":\"ContactForm_button__2CDeD\",\"input\":\"ContactForm_input__2A3nR\",\"label\":\"ContactForm_label__1b80p\"};","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport s from './ContactForm.module.scss';\r\n\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handlerChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({\r\n        name: '',\r\n        number: '',\r\n        })\r\n    }\r\n\r\n    handlerSubmit = e => {\r\n        e.preventDefault();\r\n      \r\n\r\n        this.props.onSubmit(this.state);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    render() {\r\n        const{name, number} = this.state\r\n        return (\r\n            <form className={s.form} onSubmit={this.handlerSubmit}>\r\n                <label className={s.label}>\r\n                    Name\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={this.handlerChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    Number\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={this.handlerChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <button type='submit' className={s.button}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.scss'\r\n\r\n\r\nfunction ContactList({contacts, deleteContact}) {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(contact => <li className={s.item} key={contact.id}><span className={s.name}>{contact.name}</span>:<span className={s.number}>{contact.number}</span> \r\n            <button className={s.button} type='button' onClick={() => deleteContact(contact.id)}>Delete</button></li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './Filter.module.scss'\r\n\r\n\r\nclass  Filter extends Component {\r\n  \r\n\r\n    handlerChange = e => {\r\n        const filteredValue = e.currentTarget.value;\r\n        this.props.onChange(filteredValue);\r\n    }\r\n    render() {\r\n        return (\r\n            <label className={s.label}>\r\n                Find contact by name\r\n                 <input className={s.input} type=\"text\" autoComplete=\"off\"\r\n             onChange={this.handlerChange} />\r\n         </label>\r\n        \r\n    )  \r\n   } \r\n}\r\n\r\nFilter.propTypes = {\r\n   handlerChange: PropTypes.func\r\n}\r\nexport default Filter;","import \"./App.css\";\nimport { Component } from 'react'\nimport ContactForm from \"./components/ContactForm\";\nimport { nanoid } from \"nanoid\";\nimport ContactList from \"./components/ContactLIst\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n \n state = {\n   contacts: [],\n   filter: '',\n }\n  \n  formSubmitHandler = ({ name, number }) => {\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert( name + 'is already in contacts' )\n      return;\n    }\n    this.setState(({ contacts }) => {\n    return {\n      contacts: [\n        {\n        name,\n        number,\n        id: nanoid()\n      },\n      ...contacts]\n      }\n    })\n    \n  };\n\n  changeFilter = (filteredValue) => {\n    this.setState({ filter: filteredValue })\n  }\n\n  getFilteredContactList = () => {\n    const { contacts, filter } = this.state\n            return contacts.filter(\n      contact => contact.name.toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase())\n    )\n      \n  \n  }\n\n  deleteContact = (id) => {\n    this.setState(({ contacts }) => ({\n      \n        contacts: contacts.filter(contact => contact.id !== id)\n      \n    }))\n\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps,prevState ) {\n    if (this.state.contacts !== prevState.contact) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n    const filteredContactList = this.getFilteredContactList()\n    return (\n      <div className='container'>\n        <h1>PhoneBook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter onChange={ this.changeFilter}/>\n        <ContactList contacts={filteredContactList} deleteContact={this.deleteContact}/>\n      </div>\n    ) \n  };\n}\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2LWFv\",\"item\":\"ContactList_item__3SyVI\",\"number\":\"ContactList_number__1Vla3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__6GQlF\",\"input\":\"Filter_input__jIg-f\"};"],"sourceRoot":""}